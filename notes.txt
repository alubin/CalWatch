Port to Android Wear
-- How to set up the damn emulator: http://www.tech-recipes.com/rx/49586/how-do-i-connect-an-android-wear-emulator-to-a-real-phone/
   adb -d forward tcp:5601 tcp:5601

-- How to connect to Bluetooth debugging for Moto 360: http://blog.timmattison.com/archives/2014/07/16/common-android-wear-tasks-for-developers/
    adb forward tcp:4444 localabstract:/adb-hub; adb connect localhost:4444

TODO sort out how to compile protobufs automatically via Gradle (vs. known bugs lodged with Google)
-- At least the Square protobuf runtime is automatically fetched and compiled
-- Seems to be compiling correctly, might even work on the first try (ha!)

Verify all the weird connect/disconnect corner cases
    TODO fresh boot of phone, make sure service is up no matter what
    TODO disconnect / reconnect of phone from watch
    TODO fresh boot of watch / reconnect to old phone app
    TODO nothing running on phone / fresh watch wants data
    TODO are we recovering properly if the phone kills the service after a long hiatus?

BUGS BUGs BUGZ!
  TODO incorrect handling of watch lifecycle (shock, horror)
  -- the new action with mixing up the 60Hz thread plus the 5-sec alarm seems to be running, but
     it's generating "Android Wear not responding" failures (see logdump-13oct2014.txt).


 Daydream?
     http://www.hascode.com/2013/01/using-the-android-daydream-api/
     http://developer.android.com/reference/android/service/dreams/DreamService.html
     -- looks almost exactly the same as implementing an activity, or the watchface API
